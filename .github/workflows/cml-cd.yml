name: CML Continuous Deployment

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/iris-api:latest

    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl
    - name: Install gcloud SDK and gke-gcloud-auth-plugin
      run: |
        # Install gcloud CLI
        curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-460.0.0-linux-x86_64.tar.gz
        tar -xf google-cloud-sdk-460.0.0-linux-x86_64.tar.gz
        ./google-cloud-sdk/install.sh --quiet
        export PATH=$PATH:$(pwd)/google-cloud-sdk/bin
        # Install the plugin
        ./google-cloud-sdk/bin/gcloud components install gke-gcloud-auth-plugin --quiet
        echo "$(pwd)/google-cloud-sdk/bin" >> $GITHUB_PATH

    - name: Authenticate to Google Cloud
      env:
        GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
      run: |
        echo "$GCP_SA_KEY" > sa-key.json
        ./google-cloud-sdk/bin/gcloud auth activate-service-account --key-file=sa-key.json
        ./google-cloud-sdk/bin/gcloud config set project ferrous-iridium-461419-g0

    - name: Get GKE credentials
      run: |
        ./google-cloud-sdk/bin/gcloud container clusters get-credentials iris-api --region us-central1
        
    - name: Update k8s manifests with new image
      run: |
        sed -i "s|<DOCKER_IMAGE>|${{ secrets.DOCKERHUB_USERNAME }}/iris-api:latest|g" k8s/deployment.yaml

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml

    - name: CML Report
      uses: iterative/setup-cml@v2
      env:
        REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        report: |
          ## Deployment Report
          - Docker image: `${{ secrets.DOCKERHUB_USERNAME }}/iris-api:latest`
          - Deployed to Kubernetes clusteir
